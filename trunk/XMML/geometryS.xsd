<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://www.opengis.net/xmml" xmlns:xmml="http://www.opengis.net/xmml" xmlns:gml="http://www.opengis.net/gml" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="pre-release">
	<annotation>
		<documentation>
geometry.xsd

A GML conformant schema 
for specialised geometries for geoscience

SJDC  2003-07-09
</documentation>
	</annotation>
	<!-- ====================================================================== -->
	<!-- bring in other schemas -->
	<import namespace="http://www.opengis.net/gml" schemaLocation="../gml/base/geometryComplexes.xsd"/>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<!-- === Geometric primitives === -->
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<element name="_Plane" type="xmml:AbstractPlaneType" abstract="true" substitutionGroup="gml:_GeometricPrimitive">
		<annotation>
			<documentation>The "_Plane" element is the abstract head of the substituition group for all elements representing (infinite) planes.</documentation>
		</annotation>
	</element>
	<!-- ============================================================== -->
	<complexType name="AbstractPlaneType" abstract="true">
		<annotation>
			<documentation>An abstraction of a plane to support the different levels of complexity. 
      The plane can always be viewed as a geometric primitive, i.e. is continuous.</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractGeometricPrimitiveType"/>
		</complexContent>
	</complexType>
	<!-- ============================================================== -->
	<element name="PlaneByVector" type="xmml:PlaneByVectorType" substitutionGroup="xmml:_Plane"/>
	<!-- ====================================================================== -->
	<complexType name="PlaneByVectorType">
		<annotation>
			<documentation>Plane defined by its normal and a point contined within the plane.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractPlaneType">
				<sequence>
					<element name="containedPoint" type="gml:DirectPositionType"/>
					<element name="normalVector" type="gml:VectorType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TriangleSurface" type="xmml:TriangleSurfaceType" substitutionGroup="gml:Surface">
		<annotation>
			<documentation>The most standard version of a set of triangles, directly derived by restricting the general composite provided by GML, but still using gml:Triangle</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="TriangleSurfaceType">
		<complexContent>
			<restriction base="gml:SurfaceType">
				<sequence>
					<group ref="gml:StandardObjectProperties"/>
					<element ref="xmml:trianglePatches"/>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TriSurface" type="xmml:TriSurfaceType" substitutionGroup="gml:Surface">
		<annotation>
			<documentation>More flexible, and potentially more compact version of a set of triangles, directly derived by restricting the general composite provided by GML, allowing either gml:Triangle or xmml:Triangle as members</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="TriSurfaceType">
		<complexContent>
			<restriction base="gml:SurfaceType">
				<sequence>
					<group ref="gml:StandardObjectProperties"/>
					<element ref="xmml:triPatches"/>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- === Extensive geometric objects defined using their vertices only, implicit topology === -->
	<!-- =========================================================== -->
	<element name="Envelope" type="xmml:EnvelopeType" substitutionGroup="gml:_Geometry"/>
	<element name="Interval" type="xmml:EnvelopeType" substitutionGroup="xmml:Envelope"/>
	<!-- =========================================================== -->
	<complexType name="EnvelopeType">
		<annotation>
			<documentation>Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions.</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractGeometryType">
				<sequence minOccurs="2" maxOccurs="2">
					<choice>
						<element ref="gml:pos"/>
						<element ref="gml:pointProperty"/>
					</choice>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="intervalMember" type="xmml:IntervalPropertyType"/>
	<element name="intervalProperty" type="xmml:IntervalPropertyType"/>
	<!-- =========================================================== -->
	<complexType name="IntervalPropertyType">
		<sequence minOccurs="0">
			<element ref="xmml:Interval"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =========================================================== -->
	<element name="intervalMembers" type="xmml:IntervalArrayPropertyType"/>
	<!-- =========================================================== -->
	<complexType name="IntervalArrayPropertyType">
		<sequence minOccurs="0" maxOccurs="unbounded">
			<element ref="xmml:Interval"/>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<element name="MultiInterval" type="xmml:MultiIntervalType" substitutionGroup="gml:_GeometricAggregate"/>
	<!-- =========================================================== -->
	<complexType name="MultiIntervalType">
		<annotation>
			<documentation>A MultiInterval is defined by one or more Intervals.</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractGeometricAggregateType">
				<sequence>
					<element ref="xmml:intervalMember" minOccurs="0" maxOccurs="unbounded"/>
					<element ref="xmml:intervalMembers" minOccurs="0"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- === Solids === -->
	<!-- =========================================================== -->
	<element name="Hexahedron" type="xmml:HexahedronType" substitutionGroup="gml:_Solid">
		<annotation>
			<documentation>The "Hexahedron" element is a simple solid with eight vertices and six sides. </documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<complexType name="HexahedronType">
		<annotation>
			<documentation>The "Hexahedron" element is a simple solid with eight vertices and six sides.  
      The vertices may be
      1.  indicated using a set of attributes whose values are identifiers for points described elsewhere
      or as a mixture of
      2.  described inline as direct positions using the gml:pos element, 
      3.  described inline as gml:Point using the pointRep element (if it is required to give the vertices gml:id's), or by reference to other gml:Points using the pointRep element in the by-reference mode (if Points with id's are already available). 
The coordinate system is right-handed and the vertex sequence is      
   8____7
  /         / |
5____6  |
|  4      |  3
|          | /
1____2
      </documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractSolidType">
				<choice>
					<element ref="xmml:exterior8Points"/>
					<sequence minOccurs="8" maxOccurs="8">
						<choice>
							<element ref="gml:pos"/>
							<element ref="gml:pointProperty"/>
						</choice>
					</sequence>
				</choice>
			</extension>
		</complexContent>
	</complexType>
	<!-- ============================================================== -->
	<element name="Tetrahedron" type="xmml:TetrahedronType" substitutionGroup="gml:_Solid">
		<annotation>
			<documentation>The "TetrahedronP" element is a simple solid with four vertices and four sides.  </documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<complexType name="TetrahedronType">
		<annotation>
			<documentation>The "Tetrahedron" element is a simple solid with four vertices and four sides.  
      The vertices may be
      1.  indicated using a set of attributes whose values are identifiers for points described elsewhere
      or as a mixture of
      2.  described inline as direct positions using the gml:pos element, 
      3.  described inline as gml:Point using the pointRep element (if it is required to give the vertices gml:id's), or by reference to other gml:Points using the pointRep element in the by-reference mode (if Points with id's are already available). 
The coordinate system is right-handed and the vertex sequence is      
      4
   /   |  \
 1- -| - -3
   \   |   /
      2
      </documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractSolidType">
				<choice>
					<element ref="xmml:exterior4Points"/>
					<sequence minOccurs="4" maxOccurs="4">
						<choice>
							<element ref="gml:pos"/>
							<element ref="gml:pointProperty"/>
						</choice>
					</sequence>
				</choice>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<!-- === Specialised components used by geometries === -->
	<!-- ====================================================================== -->
	<!-- === Objects === -->
	<!-- ====================================================================== -->
	<element name="TriangleRing" type="xmml:TriangleRingType" substitutionGroup="gml:LinearRing">
		<annotation>
			<documentation>Triangle ring - a LinearRing with 4 vertices.
      The initial and final vertices must be coincident.</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="TriangleRingType">
		<complexContent>
			<restriction base="gml:LinearRingType">
				<sequence>
					<group ref="gml:StandardObjectProperties"/>
					<choice minOccurs="4" maxOccurs="4">
						<element ref="gml:pos"/>
						<element ref="gml:pointProperty"/>
					</choice>
				</sequence>
				<attribute name="srsName" type="anyURI" use="optional"/>
				<attribute ref="gml:id" use="optional"/>
			</restriction>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="Triangle" type="xmml:ThreeNodeRefSurfacePatchType" substitutionGroup="gml:_SurfacePatch">
		<annotation>
			<documentation>Represents a triangle as a surface with an outer boundary defined by references to three Points. Note that this is a polygon (subtype) with no inner boundaries. </documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="ThreeNodeRefSurfacePatchType">
		<complexContent>
			<extension base="gml:AbstractSurfacePatchType">
				<sequence>
					<element ref="xmml:exterior3Points"/>
				</sequence>
				<attribute name="interpolation" type="gml:SurfaceInterpolationType" fixed="planar"/>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="Quadrilateral" type="xmml:FourNodeRefSurfacePatchType" substitutionGroup="gml:_SurfacePatch">
		<annotation>
			<documentation>Represents a quadrilateral as a surface with an outer boundary defined by references to four Points. The points shoudl be co-planar.  Note that this is a polygon (subtype) with no inner boundaries. </documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="FourNodeRefSurfacePatchType">
		<complexContent>
			<extension base="gml:AbstractSurfacePatchType">
				<sequence>
					<element ref="xmml:exterior4Points"/>
				</sequence>
				<attribute name="interpolation" type="gml:SurfaceInterpolationType" fixed="planar"/>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- === properties === -->
	<!-- ====================================================================== -->
	<element name="trianglePatches" type="xmml:TrianglePatchArrayPropertyType" substitutionGroup="gml:patches"/>
	<!-- ====== -->
	<complexType name="TrianglePatchArrayPropertyType">
		<complexContent>
			<restriction base="gml:SurfacePatchArrayPropertyType">
				<sequence>
					<element ref="gml:Triangle" minOccurs="0" maxOccurs="unbounded"/>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="triPatches" type="xmml:TriArrayPropertyType" substitutionGroup="gml:patches">
		<annotation>
			<documentation>triMembers contains triangles, each of which is described using either the gml or xmml forms.</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="TriArrayPropertyType">
		<complexContent>
			<restriction base="gml:SurfacePatchArrayPropertyType">
				<sequence minOccurs="0" maxOccurs="unbounded">
					<choice>
						<element ref="gml:Triangle"/>
						<element ref="xmml:Triangle"/>
					</choice>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<element name="quadPatches" type="xmml:QuadArrayPropertyType" substitutionGroup="gml:patches">
		<annotation>
			<documentation>quadMembers contains quadrilateral patches, each of which is described using either the gml or xmml forms.</documentation>
		</annotation>
	</element>
	<!-- ====================================================================== -->
	<complexType name="QuadArrayPropertyType">
		<complexContent>
			<restriction base="gml:SurfacePatchArrayPropertyType">
				<sequence minOccurs="0" maxOccurs="unbounded">
					<choice>
						<element ref="gml:Rectangle"/>
						<element ref="xmml:Quadrilateral"/>
					</choice>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<element name="exterior3Points">
		<complexType>
			<sequence/>
			<attribute name="v0" type="anyURI" use="required"/>
			<attribute name="v1" type="anyURI" use="required"/>
			<attribute name="v2" type="anyURI" use="required"/>
		</complexType>
	</element>
	<!-- =========================================================== -->
	<element name="exterior4Points">
		<complexType>
			<sequence/>
			<attribute name="v0" type="anyURI" use="required"/>
			<attribute name="v1" type="anyURI" use="required"/>
			<attribute name="v2" type="anyURI" use="required"/>
			<attribute name="v3" type="anyURI" use="required"/>
		</complexType>
	</element>
	<!-- =========================================================== -->
	<element name="exterior8Points">
		<complexType>
			<sequence/>
			<attribute name="v0" type="anyURI" use="required"/>
			<attribute name="v1" type="anyURI" use="required"/>
			<attribute name="v2" type="anyURI" use="required"/>
			<attribute name="v3" type="anyURI" use="required"/>
			<attribute name="v4" type="anyURI" use="required"/>
			<attribute name="v5" type="anyURI" use="required"/>
			<attribute name="v6" type="anyURI" use="required"/>
			<attribute name="v7" type="anyURI" use="required"/>
		</complexType>
	</element>
	<!-- =========================================================== -->
	<!-- 
How to implement a triangulated-surface
using geometryPrimitives.xsd
    Surface/patches/Triangle*/exterior/LinearRing/pos*
using xmml-geometry, vertices represented locally 
    TriSurface/triPatches/gml:Triangle*/exterior/LinearRing/pos*
or if Points described elsewhere
     TriSurface/triPatches/xmml:Triangle*/exterior3Points (has references to vertex id's)
     
How to implement a hexahedron:
using geometryPrimitives.xsd
    Solid/exterior/Surface/patches/Rectangle*/exterior/LinearRing
same pattern vertices represented locally 
    Hexahedron/exterior/HexahedralSurface/quadPatches/gml:Rectangle*/exterior/LinearRing/pos*
or by reference
    Hexahedron/exterior/HexahedralSurface/quadPatches/xmml:Rectangle*/exterior4Points
    
more compact patterns, ** require a fixed vertex sequence**: 
vertices represented locally
     Hexahedron/pos[8]
or by reference
     Hexahedron/exterior8Points
 
  -->
	<!-- =========================================================== -->
	<!-- === Compact form of multi-position.  === -->
	<!-- === N.B. posList is expected to be incoporated into GML.  Included here for convenience pending this === -->
	<!-- =========================================================== -->
	<element name="posList" type="xmml:DirectPositionListType"/>
	<!-- ============================================================== -->
	<complexType name="DirectPositionListBaseType">
		<annotation>
			<documentation>DirectPositionList instances hold the coordinates for a list of positions within some coordinate reference system (CRS). Since DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the "srsName" attribute will in general be missing, if this particular DirectPositionList is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
A two step derivation is used:  (i) first make the dimension attribute mandatory; (ii) add a count attribute</documentation>
		</annotation>
		<simpleContent>
			<restriction base="gml:DirectPositionType">
				<attribute name="dimension" type="positiveInteger" use="required"/>
			</restriction>
		</simpleContent>
	</complexType>
	<complexType name="DirectPositionListType">
		<simpleContent>
			<extension base="xmml:DirectPositionListBaseType">
				<attribute name="count" type="positiveInteger" use="optional">
					<annotation>
						<documentation>The attribute "count" is the length of list of coordinates (the number of positions in the list).</documentation>
					</annotation>
				</attribute>
			</extension>
		</simpleContent>
	</complexType>
	<!-- ============================================================== -->
	<element name="MultiPos" type="xmml:MultiPosType" substitutionGroup="gml:_GeometricAggregate"/>
	<!-- ======================================================= -->
	<complexType name="MultiPosType">
		<annotation>
			<documentation>
				A MultiPos is defined by a list of direct positions recorded in a posList element
			</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:AbstractGeometricAggregateType">
				<sequence>
					<element ref="xmml:posList"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
</schema>
