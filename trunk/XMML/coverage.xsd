<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Marcus Sen (british Geological Survey) -->
<schema xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xmml="http://www.opengis.net/xmml" xmlns:om="http://www.opengis.net/2005/om" xmlns:gml="http://www.opengis.net/gml" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.opengis.net/xmml" elementFormDefault="qualified"
        attributeFormDefault="unqualified" version="pre-release">
	<annotation>
		<documentation source="xw:CoveragesInXmml">coverage.xsd

A GML conformant schema 
for coverages - modified from GML coverages

Copyright (c) 2005 CSIRO - see https://www.seegrid.csiro.au/twiki/bin/view/Xmml/LegalNotices#Software_Notice</documentation>
	</annotation>
	<!-- ====================================================================== -->
	<!-- bring in other schemas -->
	<import namespace="http://www.opengis.net/gml" schemaLocation="./gml4coverage.xsd"/>
	<import namespace="http://www.opengis.net/2005/om" schemaLocation="./om4coverage.xsd"/>
	<include schemaLocation="./geometry.xsd"/>
	<include schemaLocation="./temporal.xsd"/>
	<include schemaLocation="./feature.xsd"/>
	<!-- ====================================================================== -->
	<complexType name="CoveragePropertyType">
		<sequence>
			<element ref="xmml:AbstractCoverage" minOccurs="0"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =========================================================== -->
	<element name="AbstractCoverage" type="xmml:AbstractCoverageType" abstract="true" substitutionGroup="gml:_Feature"/>
	<!-- ...... -->
	<complexType name="AbstractCoverageType" abstract="true">
		<annotation>
			<documentation>A coverage is a set of attribute values (its range) associated to position within a bounded space (its domain). 
			This coverage uses a single coverage function to associate an element from the domain with an element from its range.  
			This definition conforms to ISO 19123.  Note that coverage is a GML feature.
			
			The content model for concrete (instantiable) coverages MUST extend AbstractCoverageType with a suitable domain property.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:FeatureType">
				<sequence>
					<element ref="xmml:coverageFunction" minOccurs="0">
						<annotation>
							<documentation>Describes the mapping function between the elements in the domain and the elements in the range. Typically a sequence function.</documentation>
						</annotation>
					</element>
					<element ref="xmml:range">
						<annotation>
							<documentation>Contains a representation of the values in the coverage</documentation>
						</annotation>
					</element>
					<!--
					<element ref="xmml:domain">
						<annotation>
							<documentation>Concrete coverage types must add a domain element of the appropriate type.</documentation>
						</annotation>
					</element>
					-->
				</sequence>
				<attribute name="dimension" type="positiveInteger" use="optional"/>
			</extension>
		</complexContent>
	</complexType>
	<!-- ===========================================================
	<element name="abstractRange" type="anyType" abstract="true"/> -->
	<!-- =========================================================== -->
	<element name="range" type="xmml:RangeType"/>
	<!-- ...... -->
	<complexType name="RangeType">
		<annotation>
			<documentation>Choice of representations of values in the coverage range. 
			
			In general, the range will describe a property whose representation requires a complex or composite value. 
			The values at sample locations may be described using a record (which may be complex) for each sample location at a time (RecordList) 
			or the range may be decomposed into a set of Band elements, each of which records the values for a single component of a complex value. 
			If the latter method is used, the set of Bands must be captured in a set of Coverages. 
			The fact that these share a common domain may be indicated by use of the GML xlink:href pattern to re-use a single domain description. 
			
			The base type "anyType" is not strictly needed - all concrete types are implicitly "restrictions" of WXS "anyType", but making this explicit appear to make Xerces happier.</documentation>
		</annotation>
		<sequence>
			<choice>
				<element ref="xmml:ListOfRecords">
					<annotation>
						<documentation>Values in the range represented as record in band-interleaved (property- or component-interleaved) order - i.e. values for all components of range for one sample in domain, followed by values for all components of range for next sample in domain, etc</documentation>
					</annotation>
				</element>
				<element ref="xmml:Band">
					<annotation>
						<documentation>Values in the range represented as a vector.</documentation>
					</annotation>
				</element>
				<element ref="xmml:File">
					<annotation>
						<documentation>A reference to an external source for the data, together with a description of how that external source is structured</documentation>
					</annotation>
				</element>
			</choice>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<!-- === Types used in range content choices === -->
	<!-- =========================================================== -->
	<element name="Band" type="xmml:BandType">
		<annotation>
			<documentation>Values in the range represented as a vector.</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="BandType">
		<annotation>
			<documentation>A list, representing the values in a scalar-valued range.</documentation>
		</annotation>
		<sequence>
			<element name="rangeParameter" type="om:AxisDefinitionPropertyType">
				<annotation>
					<documentation>Container for description of range axis</documentation>
				</annotation>
			</element>
			<group ref="xmml:scalarListChoice"/>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<group name="scalarListChoice">
		<choice>
			<element name="booleanList" type="gml:booleanOrNullList"/>
			<element name="categoryList" type="gml:CodeListType">
				<annotation>
					<documentation>A list of text values describing a single property, being the set of values in one component of the range.  
						
						HTML character entities may be used to escape embedded whitespace within a list item to prevent interpretation as a list item separator. 
						See http://www.w3.org/TR/REC-html40/sgml/entities.html. 
						For example &#xA0; represents a non-breaking space. 
						
						categoryList is normally used for values taken from a controlled vocabulary. 
						For unconstrained text, use descriptionList.</documentation>
				</annotation>
			</element>
			<element name="countList" type="gml:integerOrNullList">
				<annotation>
					<documentation>A list of integers describing a single property, being the set of values in one component of the range.</documentation>
				</annotation>
			</element>
			<element name="descriptionList" type="xmml:ListOfDescriptionsType">
				<annotation>
					<documentation>A list of text values describing a single property, being the set of values in one component of the range.  
						
						HTML character entities may be used to escape embedded whitespace within a list item to prevent interpretation as a list item separator. 
						See http://www.w3.org/TR/REC-html40/sgml/entities.html. 
						For example &#xA0; represents a non-breaking space.</documentation>
				</annotation>
			</element>
			<element name="measureList" type="gml:MeasureOrNullListType">
				<annotation>
					<documentation>A list of numeric values describing a single property, being the set of values in one component of the range.</documentation>
				</annotation>
			</element>
			<element name="referenceList" type="xmml:refListType">
				<annotation>
					<documentation>A list of URI's, being the a set of references to (possibly complex) values in one component of the range.</documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<!-- =========================================================== -->
	<element name="ListOfRecords" type="xmml:ListOfRecordsType">
		<annotation>
			<documentation>Values in the range represented as record in band-interleaved (property- or component-interleaved) order - i.e. values for all components of range for one sample in domain, followed by values for all components of range for next sample in domain, etc</documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="ListOfRecordsType">
		<sequence>
			<element name="rangeParameters" type="om:RSDefinitionPropertyType">
				<annotation>
					<documentation>Container for description of component axes</documentation>
				</annotation>
			</element>
			<group ref="xmml:recordChoice" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<group name="recordChoice">
		<choice>
			<element name="value" type="string" maxOccurs="unbounded"/>
			<element name="nValue" type="gml:MeasureType" maxOccurs="unbounded"/>
			<element name="record" type="xmml:RecordType" maxOccurs="unbounded">
				<annotation>
					<documentation>A list of general tuples, each being one multi-component range value in "band-interleaved" order.</documentation>
				</annotation>
			</element>
			<element name="nRecord" type="xmml:NumericOrNullRecordType" maxOccurs="unbounded">
				<annotation>
					<documentation>A list of numeric tuples, each being one multi-component range value in "band-interleaved" order.</documentation>
				</annotation>
			</element>
			<element ref="gml:vector" maxOccurs="unbounded"/>
			<element name="member" maxOccurs="unbounded">
				<complexType>
					<sequence minOccurs="0">
						<element ref="gml:_GML"/>
					</sequence>
					<attributeGroup ref="gml:AssociationAttributeGroup"/>
				</complexType>
			</element>
		</choice>
	</group>
	<!-- =========================================================== -->
	<complexType name="ListOfDescriptionsType">
		<sequence>
			<element ref="gml:description" maxOccurs="unbounded"/>
		</sequence>
		<attribute name="property" type="anyURI">
			<annotation>
				<documentation>This attribute holds a reference to or label for the property being described.</documentation>
			</annotation>
		</attribute>
	</complexType>
	<!-- =========================================================== -->
	<element name="File" type="xmml:FileType">
		<annotation>
			<documentation>A reference to an external source for the data, together with a description of how that external source is structured</documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="FileType">
		<sequence>
			<element name="rangeParameters" type="om:RSDefinitionPropertyType">
				<annotation>
					<documentation>Container for description of component axes</documentation>
				</annotation>
			</element>
			<element name="fileName" type="anyURI"/>
			<element name="fileStructure" type="xmml:FileValueModelType"/>
			<element name="mimeType" type="anyURI" minOccurs="0"/>
			<element name="compression" type="anyURI" minOccurs="0"/>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<simpleType name="FileValueModelType">
		<annotation>
			<documentation>List of codes that identifies the file structure model for records stored in files.</documentation>
		</annotation>
		<restriction base="token">
			<enumeration value="Record Interleaved"/>
			<enumeration value="Band Sequential"/>
		</restriction>
	</simpleType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="coverageFunction" type="xmml:CoverageFunctionType"/>
	<!-- ...... -->
	<complexType name="CoverageFunctionType">
		<annotation>
			<documentation>The function or rule which defines the map from members of the domainSet to the range.  
      More functions will be added to this list</documentation>
		</annotation>
		<choice>
			<element ref="xmml:MappingRule"/>
			<element ref="xmml:GridFunction"/>
		</choice>
	</complexType>
	<!-- =========================================================== -->
	<!-- ============= Components for coverageFunctions ================ -->
	<!-- =========================================================== -->
	<element name="MappingRule" type="gml:StringOrRefType">
		<annotation>
			<documentation>Description of a rule for associating members from the domainSet with members of the rangeSet.</documentation>
		</annotation>
	</element>
	<!-- =========================================================== -->
	<element name="GridFunction" type="xmml:GridFunctionType"/>
	<!-- ...... -->
	<complexType name="GridFunctionType">
		<annotation>
			<documentation>Defines how values in the domain are mapped to the range set. The start point and the sequencing rule are specified here.</documentation>
		</annotation>
		<sequence>
			<element name="sequenceRule" type="xmml:SequenceRuleType" minOccurs="0">
				<annotation>
					<documentation>If absent, the implied value is "Linear".</documentation>
				</annotation>
			</element>
			<element name="startPoint" type="gml:integerList" minOccurs="0">
				<annotation>
					<documentation>Index position of the first grid post.  If absent the startPoint is equal to the value of gridEnvelope::low from the grid definition.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- =========================================================== -->
	<element name="IndexMap" type="xmml:IndexMapType" substitutionGroup="xmml:GridFunction"/>
	<!-- ...... -->
	<complexType name="IndexMapType">
		<annotation>
			<documentation>Exends GridFunctionType with a lookUpTable.  This contains a list of indexes of members within the rangeSet corresponding with the members of the domainSet.  The domainSet is traversed in list order if it is enumerated explicitly, or in the order specified by a SequenceRule if the domain is an implicit set.    The length of the lookUpTable corresponds with the length of the subset of the domainSet for which the coverage is defined.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:GridFunctionType">
				<sequence>
					<element name="lookUpTable" type="gml:integerList"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<complexType name="SequenceRuleType">
		<simpleContent>
			<extension base="xmml:SequenceRuleNames">
				<attribute name="order" type="xmml:IncrementOrder" use="optional"/>
			</extension>
		</simpleContent>
	</complexType>
	<!-- =========================================================== -->
	<simpleType name="SequenceRuleNames">
		<annotation>
			<documentation>List of codes (adopted from ISO 19123 Annex C) that identifies the rule for traversing a grid to correspond with the sequence of members of the rangeSet.</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="Linear"/>
			<enumeration value="Boustrophedonic"/>
			<enumeration value="Cantor-diagonal"/>
			<enumeration value="Spiral"/>
			<enumeration value="Morton"/>
			<enumeration value="Hilbert"/>
		</restriction>
	</simpleType>
	<!-- =========================================================== -->
	<simpleType name="IncrementOrder">
		<annotation>
			<documentation>The enumeration value here indicates the incrementation order  to be used on the first 2 axes, i.e. "+x-y" means that the points on the first axis are to be traversed from lowest to highest and  the points on the second axis are to be traversed from highest to lowest. The points on all other axes (if any) beyond the first 2 are assumed to increment from lowest to highest.
XXXXXXXXXXXXXXX need to make this more comprehensive</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="+x+y"/>
			<enumeration value="+y+x"/>
			<enumeration value="+x-y"/>
			<enumeration value="-y-x"/>
		</restriction>
	</simpleType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<!-- ===========================================================
	<element name="abstractDomain" type="anyType" abstract="true">
		<annotation>
			<documentation>The spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods

N.B. Temporal domains still to be implemented.</documentation>
		</annotation>
	</element> -->
	<!-- =========================================================== -->
	<element name="domain" type="xmml:DomainType"/>
	<!-- ...... -->
	<complexType name="DomainType">
		<annotation>
			<documentation>Generic model for spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods

N.B. Temporal domains still to be implemented.</documentation>
		</annotation>
		<sequence minOccurs="0">
			<choice>
				<element ref="gml:_Geometry"/>
				<element ref="gml:_TimeObject"/>
			</choice>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="Coverage" type="xmml:CoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage with a general spatio-temporal domain</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="CoverageType">
		<annotation>
			<documentation>A generic coverage type</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:domain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<element name="pointSetDomain" type="xmml:PointSetDomainType"/>
	<!-- ...... -->
	<complexType name="PointSetDomainType">
		<annotation>
			<documentation>Need to add MultiInstant ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="gml:MultiPoint"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<!-- =========================================================== -->
	<element name="PointSetCoverage" type="xmml:PointSetCoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage whose domain is a collection of point locations</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="PointSetCoverageType">
		<annotation>
			<documentation>A discrete coverage type whose domain is defined by a collection of point locations</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:pointSetDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<element name="multiPosDomain" type="xmml:MultiPosDomainType"/>
	<!-- ...... -->
	<complexType name="MultiPosDomainType">
		<sequence minOccurs="0">
			<element ref="xmml:MultiPos"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =========================================================== -->
	<element name="MultiPosCoverage" type="xmml:MultiPosCoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage whose domain is a collection of direct positions</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="MultiPosCoverageType">
		<annotation>
			<documentation>A discrete coverage type whose domain is defined by a collection of point locations</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:multiPosDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ====================================================================== -->
	<element name="intervalSetDomain" type="xmml:IntervalSetDomainType"/>
	<!-- ...... -->
	<complexType name="IntervalSetDomainType">
		<annotation>
			<documentation>Need to add MultiPeriod ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="xmml:MultiGInterval"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="IntervalSetCoverage" type="xmml:IntervalSetCoverageType" substitutionGroup="xmml:AbstractCoverage">
		<annotation>
			<documentation>A coverage whose domain is a collection of envelopes or intervals</documentation>
		</annotation>
	</element>
	<!-- ...... -->
	<complexType name="IntervalSetCoverageType">
		<annotation>
			<documentation>A discrete coverage type whose domain is defined by a collection of intervals</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:intervalSetDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- =========================================================== -->
	<element name="rectifiedGridDomain" type="xmml:RectifiedGridDomainType"/>
	<!-- ...... -->
	<complexType name="RectifiedGridDomainType">
		<annotation>
			<documentation>Need to add TemporalGrid ...</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="gml:RectifiedGrid"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =========================================================== -->
	<element name="RectifiedGridCoverage" type="xmml:RectifiedGridCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="RectifiedGridCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:rectifiedGridDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="curveDomain" type="xmml:CurveDomainType"/>
	<!-- ...... -->
	<complexType name="CurveDomainType">
		<sequence minOccurs="0">
			<element ref="gml:MultiCurve"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="CurveCoverage" type="xmml:CurveCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="CurveCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:curveDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="tinDomain" type="xmml:TinDomainType"/>
	<!-- ...... -->
	<complexType name="TinDomainType">
		<sequence minOccurs="0">
			<element ref="gml:Tin"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TinCoverage" type="xmml:TinCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="TinCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:tinDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="timeComplexDomain" type="xmml:TimeComplexDomainType"/>
	<!-- ...... -->
	<complexType name="TimeComplexDomainType">
		<sequence minOccurs="0">
			<element ref="xmml:TimeGeometricComplex"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TimeComplexCoverage" type="xmml:TimeComplexCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="TimeComplexCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:timeComplexDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- =========================================================== -->
	<element name="timeGridDomain" type="xmml:TimeGridDomainType"/>
	<!-- ...... -->
	<complexType name="TimeGridDomainType">
		<sequence minOccurs="0">
			<element ref="xmml:TimeGrid"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<element name="TimeGridCoverage" type="xmml:TimeGridCoverageType" substitutionGroup="xmml:AbstractCoverage"/>
	<!-- ...... -->
	<complexType name="TimeGridCoverageType">
		<complexContent>
			<extension base="xmml:AbstractCoverageType">
				<sequence>
					<element ref="xmml:timeGridDomain"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- =========================================================== -->
	<!-- ====================================================================== -->
</schema>