<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gml="http://www.opengis.net/gml" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xmml="http://www.opengis.net/xmml" targetNamespace="http://www.opengis.net/xmml" elementFormDefault="qualified" attributeFormDefault="unqualified" version="pre-release">
	<annotation>
		<documentation>observation.xsd

An implementation of the OandM model for XMML

Copyright (c) 2005 CSIRO - see https://www.seegrid.csiro.au/twiki/bin/view/Xmml/LegalNotices#Software_Notice</documentation>
	</annotation>
	<!-- ====================================================================== -->
	<!-- bring in other schemas -->
	<import namespace="http://www.opengis.net/gml" schemaLocation="./gml4observation.xsd"/>
	<include schemaLocation="./procedureEvent.xsd"/>
	<!-- ====================================================================== -->
	<!-- === hierarchy of "result" property elements for observations === -->
	<!-- ====================================================================== -->
	<complexType name="ResultMeasureType">
		<simpleContent>
			<extension base="xmml:MeasureType">
				<attribute name="relativeMeasure" type="xmml:RelativeMeasureCode" default="equals"/>
			</extension>
		</simpleContent>
	</complexType>
	<!-- ............ -->
	<simpleType name="RelativeMeasureCode">
		<annotation>
			<documentation xml:lang="en">This enumerated data type specifies values for relative measures.</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="lessThan"/>
			<enumeration value="lessThanOrEquals"/>
			<enumeration value="equals"/>
			<enumeration value="greaterThanOrEquals"/>
			<enumeration value="greaterThan"/>
		</restriction>
	</simpleType>
	<!-- ............ -->
	<!-- ====================================================================== -->
	<!-- ===== Object types for Observations ====== -->
	<!-- ====================================================================== -->
	<element name="Observation" type="xmml:ObservationType" abstract="true" substitutionGroup="xmml:ProcedureEvent">
		<annotation>
			<documentation>Head of Observation substitution group</documentation>
		</annotation>
	</element>
	<!-- ...................... 
	<complexType name="ObservationBaseType">
		<annotation>
			<documentation>Suppress precedingEvent, followingEvent, source and product</documentation>
		</annotation>
		<complexContent>
			<restriction base="xmml:ProcedureEventType">
				<sequence>
					<group ref="gml:StandardObjectProperties"/>
					<group ref="xmml:StandardSupportProperties"/>
					<element name="eventTime" type="gml:TimeGeometricPrimitivePropertyType"/>
					<element name="responsible" type="xmml:PartyPropertyType" minOccurs="0"/>
					<element name="procedureUsed" type="xmml:ProcedurePropertyType"/>
				</sequence>
			</restriction>
		</complexContent>
	</complexType>-->
	<!-- ...................... -->
	<complexType name="ObservationType">
		<annotation>
			<documentation>Base type for Observations. 
			Earlier versions used ObservationBaseType which suppressed preceding/following events, source/product. 
			However, these are needed to record processing chains, so have been reinstated. 

			Concrete Observation types must extend this type with a "result" of the appropriate type.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:ProcedureEventType">
				<sequence>
					<element name="subject" type="xmml:ObservationSubjectPropertyType">
						<annotation>
							<documentation>the Feature or location regarding which the observations are being made, 
			sometimes called the target of the observation, such as a specimen, station, tract, mountain, pixel, etc. </documentation>
						</annotation>
					</element>
					<element name="observedProperty" type="gml:DictionaryEntryType" minOccurs="0">
						<annotation>
							<documentation>Description of the property or phenomenon whose value is being described or estimated through observation, such as "wavelength", "grass-species", "power", "intensity in the waveband x-y", etc. It is this feature property that provides the (semantic) type of the observation. Note that the description of the phenomenon may be quite specific and constrained. In general the precise details of the constraints describing the observe properties require attention to the procedure used in making the observation: e.g. an optical sensor typically has a wavelength-dependent response. This optional property may be provided for client convenience, to allow comparison between and aggregation of observations of the same property made using different procedures.</documentation>
						</annotation>
					</element>
					<element ref="xmml:quality" minOccurs="0" maxOccurs="unbounded">
						<annotation>
							<documentation>Allow multiple quality measures if required.</documentation>
						</annotation>
					</element>
					<!-- 
					<element name="result" type="anyType">
						<annotation>
							<documentation>This is a placeholder - concrete types must replace (restrict) this with a "result" property of the correct type. </documentation>
						</annotation>
					</element>
					-->
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<complexType name="ObservationSubjectPropertyType">
		<sequence minOccurs="0">
			<group ref="xmml:ObservationSubject"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ......................... -->
	<group name="ObservationSubject">
		<choice>
			<element ref="gml:_Feature"/>
			<element ref="gml:_Geometry"/>
		</choice>
	</group>
	<!-- ====================================================================== -->
	<element name="Measurement" type="xmml:MeasurementType" substitutionGroup="xmml:Observation">
		<annotation>
			<documentation>Measurement event</documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="MeasurementType">
		<annotation>
			<documentation>Measurement event.   
			carries one or two "result" properties of type "ResultMeasureType".
			If two are present, then these must use the realtiveMeasure attribute to indicate a range.</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:ObservationType">
				<sequence>
					<element name="result" type="xmml:ResultMeasureType" maxOccurs="2"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<element name="CategoryObservation" type="xmml:CategoryObservationType" substitutionGroup="xmml:Observation">
		<annotation>
			<documentation>Observation, in which the result is a textual value from a controlled vocabulary</documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="CategoryObservationType">
		<annotation>
			<documentation>Observation, in which the result is a textual value from a controlled vocabulary</documentation>
		</annotation>
		<complexContent>
			<extension base="xmml:ObservationType">
				<sequence>
					<element name="result" type="xmml:CodeWithAuthorityType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== Properties used by specialised feature types ======= -->
	<!-- ====================================================================== -->
	<!-- 	<element name="previousObservation" type="xmml:ObservationPropertyType"/>
	<element name="relatedObservation" type="xmml:ObservationPropertyType"/>
...................... -->
	<complexType name="ObservationPropertyType">
		<sequence minOccurs="0">
			<choice>
				<element ref="xmml:Observation"/>
				<element ref="xmml:ObservationCollection"/>
			</choice>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- =================================================================== -->
	<!-- ===== Observation collection ======= -->
	<!-- ====================================================================== -->
	<element name="ObservationCollection" type="xmml:ObservationCollectionType" substitutionGroup="gml:_GML"/>
	<!-- ...................... -->
	<complexType name="ObservationCollectionType">
		<complexContent>
			<extension base="gml:AbstractGMLType">
				<sequence>
					<element name="observationMember" type="xmml:ObservationPropertyType" minOccurs="0" maxOccurs="unbounded"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!-- ===================================================================  -->
	<!-- <group name="SoftProperties">
		<sequence>
			<group ref="xmml:property" minOccurs="0" maxOccurs="unbounded"/>
			<element name="xmml:relatedObservation" minOccurs="0" maxOccurs="unbounded"/>
		</sequence>
	</group>
	====================================================================== -->
	<!--
	<group name="resultMeasureChoice">
		<choice>
			<element name="resultMeasure" type="xmml:ResultMeasureType" nillable="true">
				<annotation>
					<documentation>Holds a  measure as a simple (literal) scaled value with an (optional) relativeMeasure attribute</documentation>
				</annotation>
			</element>
			<element name="resultMeasureInterval" type="xmml:MeasureIntervalType" nillable="true">
				<annotation>
					<documentation>Describes a measure interval as a pair of simple (literal) values using the same scale</documentation>
				</annotation>
			</element>
		</choice>
	</group>
	<element name="resultBoolean" type="boolean" nillable="true">
		<annotation>
			<documentation>Holds a boolean as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultCode" type="xmml:TokenWithAuthorityType" nillable="true">
		<annotation>
			<documentation>Holds a code as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultCount" type="xmml:CountType" nillable="true">
		<annotation>
			<documentation>Holds an integer as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultNRecord" type="xmml:NumericOrNullRecordType" nillable="true">
		<annotation>
			<documentation>Holds a numeric record as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultRecord" type="xmml:RecordType" nillable="true">
		<annotation>
			<documentation>Holds a general record as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultPosition" type="gml:DirectPositionType" nillable="true">
		<annotation>
			<documentation>Holds a direct position as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultVector" type="gml:VectorType" nillable="true">
		<annotation>
			<documentation>Holds a spatial vector as a simple (literal) value</documentation>
		</annotation>
	</element>
	<element name="resultGeometry" type="gml:GeometryPropertyType" nillable="true">
		<annotation>
			<documentation>Holds or points to a gml:_Geometry</documentation>
		</annotation>
	</element>
	<element name="resultTime" type="gml:TimePrimitivePropertyType" nillable="true">
		<annotation>
			<documentation>Holds or points to a gml:_TimePrimitive</documentation>
		</annotation>
	</element>
	<element name="resultObject" type="gml:AssociationType" nillable="true">
		<annotation>
			<documentation>The most general form for holding a "result", which may be any Object (including valueObjects) or may simply carry a link to the result</documentation>
		</annotation>
	</element>
	<group name="resultChoice">
		<choice>
			<group ref="xmml:resultMeasureChoice"/>
			<element ref="xmml:resultBoolean"/>
			<element ref="xmml:resultCode"/>
			<element ref="xmml:resultCount"/>
			<element ref="xmml:resultNRecord"/>
			<element ref="xmml:resultRecord"/>
			<element ref="xmml:resultGeometry"/>
			<element ref="xmml:resultTime"/>
			<element ref="xmml:resultObject"/>
		</choice>
	</group>
-->
</schema>
