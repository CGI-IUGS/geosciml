<!-- ======================================================================= -->
<!-- Experimental DTD for geoscientific reports in the DGSM. 
     Marcus Sen -->
<!-- v3.5alpha
     A work in progress; different instances of file with this version may not be the same. Will
     become v3.5 when fixed.
     Replaced CALS table model with XHTML model. 
     Replaced equation content with MathML but because of Oracle and other parsers having
     trouble with official MathML DTD this has been temporarily disabled.
     Removed navigational sections like lot, toc, index.
     Simplified chapter and section etc content models to %std.block.els*, section* to make simpler
     and easier to pick elements from WorX tagger. The only thing this allows which wasn't in
     the previous version is completely empty chapter, section ... elements without any block or
     section elements. I don't think the extra DTD complexity justifies checking for this trivial case.-->
<!-- v3.4
     Added CALS (and optional Exchange) table model(s) from DocBook so that
     don't have to use scanned images for tables anymore. -->
<!-- v3.3
     Added number attribute to chapter, section and appendix elements.
     Added metadata containing *info sub-elements to para and *list
     elements.  Later added level attribute on section elements (without
     changing DTD version number) -->
<!-- v3.2
     Added key attribute to indexterm. -->
<!-- v3.1
     Commented out Oracle table attributes of indexterm element.
     Simplified figure and table elements moving completely away from
     DocBook to a fit-for-purpose model.
     Added notations.
     Noticed metadata *info elements were at inconsistent positions w.r.t
     parent element in DocBook.  Decided to make them all consistently at
     start of parent element in this DTD.
     Also changed *info elements to mixed content to make it easier to
     insert and edit them in WorX. -->
<!-- ======================================================================= -->
<!-- ======================================================================= -->
<!-- Assorted parameter entities for convenience -->
<!-- ======================================================================= -->
<!ENTITY % lists "itemizedlist | orderedlist">
<!ENTITY % block.layout.els " %lists; | equation | literallayout | screen | informaltable">
<!ENTITY % std.block.els "para | figure | table | %lists;">
<!ENTITY % std.inline.els " subscript | superscript | inlineequation | emphasis
| indexterm | link | anchor ">
<!ENTITY % simple.inline.els "simemphasis | subscript | superscript">
<!-- ======================================================================= -->
<!-- book is the top level element.  Within book the main text is contained
     in preface, chapter and appendix elements.  There may be several
     preface elements for things such as Foreword, Preface, Summary and any
     other major text sections that come before the main chapters.  The bulk
     of the book text is contained in a number of chapter elements.
     Supplementary material, including Appendices and Enclosures, after the
     main chapters are contained in appendix elements.

     toc, lot and index elements contain the usual navigational sections of
     the book; Table of Contents, List of Titles (for Figures, Tables, and
     any other formal items) and Index.  These may be generated 
     automatically from markup in the main text of the book.

     glossary and bibliography elements contain the same parts of the book
     (bibliography being the References section) with a list of items 
     manually compiled but with cross-references to markup in the main text.

     dedication and colophon elements contain these common minor pieces of
     front and back matter.
-->
<!-- ======================================================================= -->
<!-- Removed navigational sections toc, lot, index from v3.5
     They can be automatically generated and this simplifies the DTD.-->
<!ELEMENT book (bookinfo?, (title, subtitle?, titleabbrev?)?, (dedication | glossary | bibliography | preface | chapter | appendix | colophon)*)>
<!-- To fix msxml inability to use namespace declaration attributes declared in the DTD I am 
making them #FIXED attributes on the book element which will have to be re-declared in instance
documents; but this is easier than having to re-declare them on every math or xhtml:table element
in the document. May also have to add this to other elements that can be used as document element.
-->
<!ATTLIST book
	id ID #IMPLIED
	xmlns:xhtml CDATA #FIXED "http://www.bgs.ac.uk/URI/xhtmlderivativesen"
	xmlns:m CDATA #FIXED "http://www.w3.org/1998/Math/MathML"
>
<!ELEMENT title (#PCDATA | %simple.inline.els;)*>
<!ATTLIST title
	id ID #IMPLIED
>
<!ELEMENT subtitle (#PCDATA | %simple.inline.els;)*>
<!ATTLIST subtitle
	id ID #IMPLIED
>
<!ELEMENT titleabbrev (#PCDATA)>
<!ATTLIST titleabbrev
	id ID #IMPLIED
>
<!--
     chapter, preface and appendix elements are where almost all the
     book/report content lies and they share a similar structure.  They all
     have the standard title elements and *info elements for metadata.

     Their main content can include certain standard block elements and 
     section elements.  The standard block elements deal with paragraphs, 
     lists, figures, tables etc.  The section elements subdivide the 
     content.
-->
<!-- Chapters of the book are put in chapter elements! -->
<!ELEMENT chapter (chapterinfo?, title, subtitle?, titleabbrev?, (%std.block.els;)*, section*)>
<!ATTLIST chapter
	id ID #IMPLIED
	number CDATA #IMPLIED
>
<!-- Prefaces, Forewords and Summaries are put in preface elements. -->
<!ELEMENT preface (prefaceinfo?, title, subtitle?, titleabbrev?, (%std.block.els;)*, section*)>
<!ATTLIST preface
	id ID #IMPLIED
>
<!-- Appendices and Enclosures are put in appendix elements. -->
<!ELEMENT appendix (appendixinfo?, title, subtitle?, titleabbrev?, (%std.block.els;)*, section*)>
<!ATTLIST appendix
	id ID #IMPLIED
	number CDATA #IMPLIED
>
<!--
     section elements are used to subdivide logically the content of any of 
     the above major divisions of a book and have a similar structure.  
     They may contain standard block elements or further section elements 
     which subdivide the parent section.  (Nesting too deeply may lead to
     problems.)
-->
<!ELEMENT section (sectioninfo?, title, subtitle?, titleabbrev?, (%std.block.els;)*, section*)>
<!ATTLIST section
	id ID #IMPLIED
	number CDATA #IMPLIED
	level CDATA #IMPLIED
>
<!-- ======================================================================= -->
<!-- Major block level elements. -->
<!-- Paragraphs, Figures and Tables.  -->
<!-- ======================================================================= -->
<!-- Paragraphs -->
<!ELEMENT para (#PCDATA | parainfo | %std.inline.els; | %block.layout.els;)*>
<!ATTLIST para
	id ID #IMPLIED
>
<!-- Figures -->
<!ELEMENT figure (figureinfo?, title, titleabbrev?, caption?, imageobject+)>
<!ATTLIST figure
	id ID #IMPLIED
	float (0 | 1) "1"
>
<!-- Tables -->
<!-- Content model for Table. -->
<!-- Use the previous v3.3 like table element as the structure to hold meta-data, title etc, but 
     with xhtml-based table structure below in place of old tgroup element to hold the actual
     table structure. imageobject is retained for backwards compatibility but may be removed later.
     There is a name clash and for general neatness I will use a prefix of xhtml: to be put in
     front of all the xhtml derived elements. Later this might be done with a proper namespace
     declaration but it's just a character string in this DTD for the moment. -->
<!ELEMENT table (tableinfo?, title, titleabbrev?, caption?, (imageobject | xhtml:table)+)>
<!ATTLIST table
	id ID #IMPLIED
>
<!-- Removed caption from xhtml table as it is iin enclosing table element -->
<!-- Cut down the %attrs; attributes. -->
<!-- Removed all attributes not to do with table layout, borders etc like titling, summaries etc.
     which should be automatically generated from other info in the document if required. -->
<!-- The actual content of table cells which is in the entity %Flow in xhtml is re-defined just
     to allow elements from elsewhere in this DTD not the other xhtml elements that can 
     occur in xhtml. They will get converted on output in the usual way to html. -->
<!ENTITY % Flow "(#PCDATA | %std.inline.els; | %block.layout.els; | para)*">
<!ENTITY % Character "CDATA">
<!-- a single character from [ISO10646] -->
<!-- Reduced the allowable attributes on elements -->
<!ENTITY % StyleSheet "CDATA">
<!-- style sheet data -->
<!ENTITY % coreattrs "id          ID             #IMPLIED
  class       CDATA          #IMPLIED
  style       %StyleSheet;   #IMPLIED
  xmlns:xhtml 	CDATA	#FIXED 'http://www.bgs.ac.uk/URI/xhtmlderivativesen'
">
<!ENTITY % attrs "%coreattrs;">
<!-- The following entities are copied from xhtml spec as they are used by the table elements
     I am using. -->
<!ENTITY % Length "CDATA">
<!-- nn for pixels or nn% for percentage length -->
<!ENTITY % Pixels "CDATA">
<!-- integer representing length in pixels -->
<!--
 The border attribute sets the thickness of the frame around the
 table. The default units are screen pixels.

 The frame attribute specifies which parts of the frame around
 the table should be rendered. The values are not the same as
 CALS to avoid a name clash with the valign attribute.
-->
<!ENTITY % TFrame "(void|above|below|hsides|lhs|rhs|vsides|box|border)">
<!--
 The rules attribute defines which rules to draw between cells:

 If rules is absent then assume:
     "none" if border is absent or border="0" otherwise "all"
-->
<!ENTITY % TRules "(none | groups | rows | cols | all)">
<!-- horizontal placement of table relative to document -->
<!ENTITY % TAlign "(left|center|right)">
<!-- horizontal alignment attributes for cell contents

  char        alignment char, e.g. char=':'
  charoff     offset for alignment char
-->
<!ENTITY % cellhalign "align      (left|center|right|justify|char) #IMPLIED
   char       %Character;    #IMPLIED
   charoff    %Length;       #IMPLIED">
<!-- vertical alignment attributes for cell contents -->
<!ENTITY % cellvalign "valign     (top|middle|bottom|baseline) #IMPLIED">
<!ENTITY % Number "CDATA">
<!-- one or more digits -->
<!ENTITY % MultiLength "CDATA">
<!-- pixel, percentage, or relative -->
<!-- Scope is simpler than headers attribute for common tables -->
<!ENTITY % Scope "(row|col|rowgroup|colgroup)">
<!-- These should be a .. -->
<!ELEMENT xhtml:table ((xhtml:col* | xhtml:colgroup*), ((xhtml:thead?, xhtml:tfoot?, xhtml:tbody+) | (xhtml:tr+)))>
<!ATTLIST xhtml:table
	%attrs; 
	width %Length; #IMPLIED
	border %Pixels; #IMPLIED
	frame %TFrame; #IMPLIED
	rules %TRules; #IMPLIED
	cellspacing %Length; #IMPLIED
	cellpadding %Length; #IMPLIED
>
<!--
    Use thead to duplicate headers when breaking table
    across page boundaries, or for static headers when
    tbody sections are rendered in scrolling panel.

    Use tfoot to duplicate footers when breaking table
    across page boundaries, or for static footers when
    tbody sections are rendered in scrolling panel.

    Use multiple tbody sections when rules are needed
    between groups of table rows.
-->
<!ELEMENT xhtml:thead (xhtml:tr)+>
<!ATTLIST xhtml:thead
	%attrs; 
	%cellhalign; 
	%cellvalign; 
>
<!ELEMENT xhtml:tfoot (xhtml:tr)+>
<!ATTLIST xhtml:tfoot
	%attrs; 
	%cellhalign; 
	%cellvalign; 
>
<!ELEMENT xhtml:tbody (xhtml:tr)+>
<!ATTLIST xhtml:tbody
	%attrs; 
	%cellhalign; 
	%cellvalign; 
>
<!--
colgroup groups a set of col elements. It allows you to group
several semantically related columns together.
-->
<!ELEMENT xhtml:colgroup (xhtml:col)*>
<!ATTLIST xhtml:colgroup
	%attrs; 
	span %Number; "1"
	width %MultiLength; #IMPLIED
	%cellhalign; 
	%cellvalign; 
>
<!--
 col elements define the alignment properties for cells in
 one or more columns.

 The width attribute specifies the width of the columns, e.g.

     width=64        width in screen pixels
     width=0.5*      relative width of 0.5

 The span attribute causes the attributes of one
 col element to apply to more than one column.
-->
<!ELEMENT xhtml:col EMPTY>
<!ATTLIST xhtml:col
	%attrs; 
	span %Number; "1"
	width %MultiLength; #IMPLIED
	%cellhalign; 
	%cellvalign; 
>
<!ELEMENT xhtml:tr (xhtml:th | xhtml:td)+>
<!ATTLIST xhtml:tr
	%attrs; 
	%cellhalign; 
	%cellvalign; 
>
<!-- th is for headers, td for data and for cells acting as both -->
<!ELEMENT xhtml:th %Flow;>
<!ATTLIST xhtml:th
	%attrs; 
	headers IDREFS #IMPLIED
	scope %Scope; #IMPLIED
	rowspan %Number; "1"
	colspan %Number; "1"
	%cellhalign; 
	%cellvalign; 
>
<!ELEMENT xhtml:td %Flow;>
<!ATTLIST xhtml:td
	%attrs; 
	axis CDATA #IMPLIED
	headers IDREFS #IMPLIED
	scope %Scope; #IMPLIED
	rowspan %Number; "1"
	colspan %Number; "1"
	%cellhalign; 
	%cellvalign; 
>
<!-- ======================================================================= -->
<!-- Lists -->
<!-- These may be lists inside paragraphs or be lists of paragraphs. -->
<!-- ======================================================================= -->
<!ELEMENT itemizedlist (listinfo?, listitem+)>
<!ATTLIST itemizedlist
	id ID #IMPLIED
>
<!ELEMENT orderedlist (listinfo?, listitem+)>
<!ATTLIST orderedlist
	id ID #IMPLIED
>
<!ELEMENT listitem (#PCDATA | %std.inline.els; | %lists; | para)*>
<!ATTLIST listitem
	id ID #IMPLIED
>
<!-- ======================================================================= -->
<!-- Block layout elements -->
<!-- These elements are to allow laying out text in formats like columns
     etc.  informaltable is for text laid out like tables, literallayout and
     screen should preserve spacing and linebreaks so that special layout
     can be manually specified. Contents of screen elements should be
     rendered in a monospace font, literallayout elements do not require any
     font change. -->
<!-- ======================================================================= -->
<!-- Have altered DocBook definition to use xhtml tables instead of the CALS tgroup
     May invalidate any documents marked up under previous versions of the DTD. -->
<!ELEMENT informaltable (mediaobject | xhtml:table)+>
<!ATTLIST informaltable
	id ID #IMPLIED
>
<!ELEMENT literallayout (#PCDATA)>
<!ATTLIST literallayout
	id ID #IMPLIED
>
<!ELEMENT screen (#PCDATA)>
<!ATTLIST screen
	id ID #IMPLIED
>
<!-- Equations -->
<!-- Change equation so that it is MathML using the same technique that the MathML 
     enabled version of DocBook does. Later altered to used MathML documented method.
     This change may invalidate some documents
     marked up under previous versions of the DTD. (Allow eqncontent element with
     ANY content for backwards compatibility, will drop when fixed document.) -->
<!ELEMENT eqncontent ANY>
<!ELEMENT equation (title, titleabbrev?, (m:math | eqncontent))>
<!ATTLIST equation
	id ID #IMPLIED
>
<!-- Temporarily ignoring MathML section until parser problems with MathML DTD can be solved -->
<![IGNORE[
<!-- You must also include the MathML DTD -->
<!-- tell the MathML DTD to do the right prefixing -->
<!ENTITY % MATHML.prefixed "INCLUDE" >
<!ENTITY % MATHML.prefix   "m" >
<!-- Fix for inability for msxml to cope with Plane 1 Unicode characters as given on w3c site -->
<!ENTITY % plane1D "&#38;#38;#xE">
<!ENTITY % mathml PUBLIC "-//W3C//DTD MathML 2.0//EN"
                  "http://www.w3.org/Math/DTD/mathml2/mathml2.dtd">
%mathml;
]]>
<![INCLUDE[
<!ELEMENT m:math ANY>
<!ATTLIST m:math
  display CDATA #IMPLIED
>
]]>
<!-- ======================================================================= -->
<!-- Images. Dropped audioobject and videoobject from DocBook definitions of
     mediaobjects. A single mediaobject is just one object, if there are 
     several imageobjects they are alternatives e.g. at different
     resolutions for output in different situations.  textobject can be used
     if graphics can't be displayed. -->
<!-- ======================================================================= -->
<!ELEMENT mediaobject (objectinfo?, (imageobject), (imageobject | textobject)*, caption?)>
<!ATTLIST mediaobject
	id ID #IMPLIED
>
<!ELEMENT inlinemediaobject (objectinfo?, (imageobject), (imageobject | textobject)*, caption?)>
<!ATTLIST inlinemediaobject
	id ID #IMPLIED
>
<!ELEMENT imageobject (objectinfo?, imagedata+)>
<!ATTLIST imageobject
	id ID #IMPLIED
>
<!ELEMENT imagedata EMPTY>
<!ATTLIST imagedata
	id ID #IMPLIED
	entityref ENTITY #IMPLIED
	dataformat CDATA #IMPLIED
	role CDATA #IMPLIED
	width CDATA #IMPLIED
	depth CDATA #IMPLIED
>
<!ELEMENT textobject (objectinfo?, para+)>
<!ATTLIST textobject
	id ID #IMPLIED
>
<!ELEMENT caption (para+)>
<!ATTLIST caption
	id ID #IMPLIED
>
<!-- ======================================================================= -->
<!-- Miscellaneous Inline Elements -->
<!-- ======================================================================= -->
<!ELEMENT emphasis (#PCDATA | subscript | superscript | inlineequation | indexterm | link | anchor)*>
<!ELEMENT simemphasis (#PCDATA | subscript | superscript)*>
<!-- Changed to use MathML. -->
<!ELEMENT inlineequation (m:math)>
<!ATTLIST inlineequation
	id ID #IMPLIED
>
<!ELEMENT subscript (#PCDATA | subscript | superscript)*>
<!ELEMENT superscript (#PCDATA | subscript | superscript)*>
<!-- ======================================================================= -->
<!-- Metadata container elements -->
<!-- ======================================================================= -->
<!-- bookinfo is a meta data container for book elements.
Removed lots of elements I don't think I'll use.
Added acknowledgements.
Added infosource but maybe this should be included in something else?
Made authorgroup the container for all authors, editors, collaborators and
othercredits including people and organisations.
Need to add identifier for Discovery Metadata, docutype for "memoir" etc.,
polygon for ? and maybe area for shapefile reference.
Changed *info elements to mixed content to allow easier insertion and editing in WorX.
v3.5 added discovery_metadata and metadata_identifier. Could add other metadata fields to allow loading
of metadata table from XML document but probaly the correct way is to use the web metadata interface to
enter the data and just associate it by putting the primary key field here.
v3.5 replaced the abstract, authorgroup, pubdate, edition, isbn, issn, publisher elements with a single
biblioentry
-->
<!ELEMENT bookinfo (#PCDATA | legalnotice | indexterm | biblioentry | copyright | discovery_metadata)*>
<!ATTLIST bookinfo
	id ID #IMPLIED
>
<!ELEMENT chapterinfo (#PCDATA | indexterm | Abstract | Author)*>
<!ATTLIST chapterinfo
	id ID #IMPLIED
>
<!ELEMENT sectioninfo (#PCDATA | indexterm)*>
<!ATTLIST sectioninfo
	id ID #IMPLIED
>
<!ELEMENT prefaceinfo (#PCDATA | indexterm | Author)*>
<!ATTLIST prefaceinfo
	id ID #IMPLIED
>
<!ELEMENT appendixinfo (#PCDATA | indexterm | Author)*>
<!ATTLIST appendixinfo
	id ID #IMPLIED
>
<!ELEMENT figureinfo (#PCDATA | indexterm)*>
<!ATTLIST figureinfo
	id ID #IMPLIED
>
<!ELEMENT tableinfo (#PCDATA | indexterm)*>
<!ATTLIST tableinfo
	id ID #IMPLIED
>
<!ELEMENT parainfo (#PCDATA | indexterm)*>
<!ATTLIST parainfo
	id ID #IMPLIED
>
<!ELEMENT listinfo (#PCDATA | indexterm)*>
<!ATTLIST listinfo
	id ID #IMPLIED
>
<!ELEMENT objectinfo (#PCDATA | legalnotice | indexterm | Author | copyright)*>
<!ATTLIST objectinfo
	id ID #IMPLIED
>
<!-- ======================================================================= -->
<!-- Assorted structured data elements for metadata. -->
<!-- ======================================================================= -->
<!-- BGS Discovery Metadata -->
<!-- Just the primary key to link to the table, could add elements for the other fields but I don't
     think that is the best thing to do; enter the metadata using the normal web interface. -->
<!ELEMENT discovery_metadata (metadata_identifier)>
<!ELEMENT metadata_identifier (#PCDATA)>
<!-- others -->
<!ELEMENT legalnotice (title?, para+)>
<!ELEMENT copyright (year+, holder*)>
<!ELEMENT year (#PCDATA)>
<!ELEMENT holder (#PCDATA)>
<!-- ======================================================================= -->
<!-- Navigational sections of book -->
<!-- ======================================================================= -->
<!-- Table of contents -->
<!-- DocBook has tocfront and tocback elements but the definition in the 
     Guide seems inconsistent with the DTD spec? -->
<!-- For v3.5 commented out all Navigational sections as they (or their equivalents) can be
     automatically generated from the book contents rather than stored and marked up separately.
     -->
<!--
<!ELEMENT toc ((title, subtitle?, titleabbrev?)?, tocchap*)>
<!ATTLIST toc
	id ID #IMPLIED
>
-->
<!-- This is not the proper definition of tocchap, just a placeholder until
     specified properly. -->
<!--
<!ELEMENT tocchap (#PCDATA)>
<!ATTLIST tocchap
	id ID #IMPLIED
>
-->
<!-- List of titles (Figures, Plates, Tables etc.) -->
<!--
<!ELEMENT lot ((title, subtitle?, titleabbrev?)?, lotentry*)>
<!ATTLIST lot
	id ID #IMPLIED
>
<!ELEMENT lotentry (#PCDATA | %std.inline.els;)*>
<!ATTLIST lotentry
	id ID #IMPLIED
>
-->
<!-- Indexes -->
<!--
<!ELEMENT index (indexinfo?, (title, subtitle?, titleabbrev?)?, indexentry*)>
<!ATTLIST index
	id ID #IMPLIED
>
-->
<!-- This simplified indexentry definition is incompatible with DocBook -->
<!--
<!ELEMENT indexentry (#PCDATA)>
<!ATTLIST indexentry
	id ID #IMPLIED
>
-->
<!-- ======================================================================= -->
<!-- Reference sections of book -->
<!-- ======================================================================= -->
<!-- Glossaries -->
<!ELEMENT glossary ((title, subtitle?, titleabbrev?)?, glossentry*)>
<!ATTLIST glossary
	id ID #IMPLIED
>
<!-- This is not the proper definition of glossentry, just a placeholder
     until it's specified properly -->
<!ELEMENT glossentry (#PCDATA)>
<!ATTLIST glossentry
	id ID #IMPLIED
>
<!-- Bibliographic references -->
<!-- I am using biblioentry and bibliomixed with the same meaning as in DocBook where contents
     of biblioentry must all be fully broken down into sub-elements whereas bibliomixed allows 
     PCDATA. However the content models are not the same, I define fields the same as the generic
     EndNote fields (except Custom fields, Label, Keywords and Notes which I don't think are 
     appropriate here as their usage is dependent on individuals) with 
     an attribute for reference type. Full mark-up would 
     involve using a biblioentry element and assigning every bit of information to the appropritate sub-
     field, possibly re-arranging the way the reference was originally written. A minimal mark-up woul
     involve using the bibliomixed element with Author and Title sub-elements, the rest of the reference
     could be written as PCDATA or put in further sub-elements. The DTD cannot enforce the use of
     Author and Title in the mixed content model of bibliomixed but it should be taken as a rule. 
     Both elements must have an id attribute so that they can be referred to from the text. The meaning
     of the sub-elements is sometimes obvious but sometimes varies depending on the EndNote reference
     type (which is an optional attribute) and so should be done by reference to EndNote documentation
     or using an export from EndNote directly (translation application to be written).
     There is also an optional olib_titleno attribute for the case where the Olib key is known.-->
<!ELEMENT bibliography ((title, subtitle?, titleabbrev?)? | (%std.block.els;)? | (biblioentry | bibliomixed)*)>
<!ATTLIST bibliography
	id ID #IMPLIED
>
<!ELEMENT biblioentry (Author, Year?, Title, Secondary_Author?, Secondary_Title?, Place_Published?, Publisher?, Volume?, Number_of_Volumes?, Number?, Pages?, Section?, Tertiary_Author?, Tertiary_Title?, Edition?, Date?, Type_of_Work?, Subsidiary_Author?, Short_Title?, Alternate_Title?, ISBN_ISSN?, Original_Publication?, Reprint_Edition?, Reviewed_Item?, Accession_Number?, Call_Number?, Abstract?, URL?, Author_Address?)>
<!ATTLIST biblioentry
	id ID #REQUIRED
	Reference_Type (Journal_Article | Book | Book_Section | Manuscript | Edited_Book | Magazine_Article | Newspaper_Article | Conference_Proceedings | Report | Personal_Communication | Computer_Program | Electronic_Source | Audiovisual_Material | Film_or_Broadcast | Artwork | Map) #IMPLIED
	geolib_titleno CDATA #IMPLIED
>
<!ELEMENT bibliomixed (#PCDATA | %simple.inline.els; | Author | Year | Title | Secondary_Author | Secondary_Title | Place_Published | Publisher | Volume | Number_of_Volumes | Number | Pages | Section | Tertiary_Author | Tertiary_Title | Edition | Date | Type_of_Work | Subsidiary_Author | Short_Title | Alternate_Title | ISBN_ISSN | Original_Publication | Reprint_Edition | Reviewed_Item | Accession_Number | Call_Number | Abstract | URL | Author_Address)*>
<!ATTLIST bibliomixed
	id ID #REQUIRED
	Reference_Type (Journal_Article | Book | Book_Section | Manuscript | Edited_Book | Magazine_Article | Newspaper_Article | Conference_Proceedings | Report | Personal_Communication | Computer_Program | Electronic_Source | Audiovisual_Material | Film_or_Broadcast | Artwork | Map) #IMPLIED
	geolib_titleno CDATA #IMPLIED
>
<!ELEMENT Author (#PCDATA)>
<!ELEMENT Year (#PCDATA)>
<!ELEMENT Title (#PCDATA)>
<!ELEMENT Secondary_Author (#PCDATA)>
<!ELEMENT Secondary_Title (#PCDATA)>
<!ELEMENT Place_Published (#PCDATA)>
<!ELEMENT Publisher (#PCDATA)>
<!ELEMENT Volume (#PCDATA)>
<!ELEMENT Number_of_Volumes (#PCDATA)>
<!ELEMENT Number (#PCDATA)>
<!ELEMENT Pages (#PCDATA)>
<!ELEMENT Section (#PCDATA)>
<!ELEMENT Tertiary_Author (#PCDATA)>
<!ELEMENT Tertiary_Title (#PCDATA)>
<!ELEMENT Edition (#PCDATA)>
<!ELEMENT Date (#PCDATA)>
<!ELEMENT Type_of_Work (#PCDATA)>
<!ELEMENT Subsidiary_Author (#PCDATA)>
<!ELEMENT Short_Title (#PCDATA)>
<!ELEMENT Alternate_Title (#PCDATA)>
<!ELEMENT ISBN_ISSN (#PCDATA)>
<!ELEMENT Original_Publication (#PCDATA)>
<!ELEMENT Reprint_Edition (#PCDATA)>
<!ELEMENT Reviewed_Item (#PCDATA)>
<!ELEMENT Accession_Number (#PCDATA)>
<!ELEMENT Call_Number (#PCDATA)>
<!ELEMENT Abstract (#PCDATA | para)*>
<!ELEMENT URL (#PCDATA)>
<!ELEMENT Author_Address (#PCDATA)>
<!-- ======================================================================= -->
<!-- Miscellaneous front and back-matter -->
<!-- ======================================================================= -->
<!ELEMENT dedication ((title, subtitle?, titleabbrev?)?, para+)>
<!ATTLIST dedication
	id ID #IMPLIED
>
<!ELEMENT colophon ((title, subtitle?, titleabbrev?)?, para+)>
<!ATTLIST colophon
	id ID #IMPLIED
>
<!-- ======================================================================= -->
<!-- Indexing and Cross-Referencing Elements -->
<!-- ======================================================================= -->
<!ELEMENT indexterm (#PCDATA | %simple.inline.els;)*>
<!ATTLIST indexterm
	id ID #IMPLIED
	linkend IDREF #IMPLIED
	scheme CDATA #REQUIRED
	value CDATA #IMPLIED
	key CDATA #IMPLIED
>
<!-- Commented out database link attributes for the moment as WorX's habit of inserting lots
       of empty attributes makes XML source hard to read.
          datadic CDATA #IMPLIED
          pk1 CDATA #IMPLIED
          pk2 CDATA #IMPLIED
          pk3 CDATA #IMPLIED
          pk4 CDATA #IMPLIED
-->
<!ELEMENT link (#PCDATA | %std.inline.els;)*>
<!ATTLIST link
	id ID #IMPLIED
	linkend IDREF #REQUIRED
	type (figref | tableref | bibref | other) #REQUIRED
>
<!ELEMENT anchor EMPTY>
<!ATTLIST anchor
	id ID #IMPLIED
>
<!-- ======================================================================= -->
<!-- Notations -->
<!-- ======================================================================= -->
<!NOTATION gif SYSTEM "gif">
<!NOTATION jpg SYSTEM "jpg">
<!NOTATION pdf SYSTEM "pdf">
